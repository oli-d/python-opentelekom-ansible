---  
  - name: Setup VPC network
    otc_vpc:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}"
      cidr: "10.19.0.0/16"
    register: vpc_result
  - set_fact: 
      net_admin_facts:
        vpc: "{{ vpc_result.vpc }}"

  - name: Setup subnet access
    otc_subnet:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.subnets.access.name }}" 
      vpc_id: "{{ net_admin_facts.vpc.id }}"
      cidr: "{{ net_admin.subnets.access.cidr }}"
      gateway_ip: "{{ net_admin.subnets.access.gateway_ip | default(net_admin.subnets.access.cidr|ipaddr('1')|ipaddr('address')) }}"
      dns_nameservers: "{{ net_admin.subnets.access.nameservers }}"
    register: sn_access_result
  - set_fact:
      net_admin_facts: "{{ net_admin_facts | combine({ 'subnets': { 'access': sn_access_result.subnet }}, recursive=True) }}"

  - name: Security_group
    os_security_group:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}-rds1-sg"
    register: rds1_sg_result
  - os_security_group_rule:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      direction: "ingress"
      protocol: "tcp"
      port_range_max: 22
      port_range_min: 22
      security_group: "{{ rds1_sg_result.id }}"
  - name: Aquire key
    otc_key:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "rbe-sdktest-key-000018"
    register: kms_result
    
  - name: Create RDS database
    otc_rds:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}-db1"
      datastore_type: 'mysql'
      datastore_version: "5.7"
      flavor_ref: "rds.mysql.c2.medium"
      volume_type: "COMMON"
      volume_size: 100
      region: "eu-de"
      availability_zone: "eu-de-01"
      password: "Test@12345678"
      vpc_id: "{{ net_admin_facts.vpc.id }}"
      subnet_id: "{{ net_admin_facts.subnets.access.id }}"
      security_group_id: "{{ rds1_sg_result.id }}"
      disk_encryption_id: "{{ kms_result.id }}"

  - name: Remove RDS database
    otc_rds:
      state: "absent"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}-db1"

  - name: Remove security group
    os_security_group_rule:
      state: "absent"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      direction: "ingress"
      protocol: "tcp"
      port_range_max: 22
      port_range_min: 22
      security_group: "{{ rds1_sg_result.id }}"  
  - os_security_group:
      state: "absent"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}-rds1-sg"

  - name: Remove subnet access
    otc_subnet:
      state: "absent"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.subnets.access.name }}" 

  - name: Remove VPC network
    otc_vpc:
      state: "absent"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}"
