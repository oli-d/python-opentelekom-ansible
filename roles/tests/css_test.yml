---  
  - name: Setup VPC network
    otc_vpc:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}"
      cidr: "10.19.0.0/16"
    register: vpc_result
  - set_fact: 
      net_admin_facts:
        vpc: "{{ vpc_result.vpc }}"

  - name: Setup subnet access
    otc_subnet:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.subnets.access.name }}" 
      vpc_id: "{{ net_admin_facts.vpc.id }}"
      cidr: "{{ net_admin.subnets.access.cidr }}"
      gateway_ip: "{{ net_admin.subnets.access.gateway_ip | default(net_admin.subnets.access.cidr|ipaddr('1')|ipaddr('address')) }}"
      dns_nameservers: "{{ net_admin.subnets.access.nameservers }}"
    register: sn_access_result
  - set_fact:
      net_admin_facts: "{{ net_admin_facts | combine({ 'subnets': { 'access': sn_access_result.subnet }}, recursive=True) }}"

  - name: Security_group
    os_security_group:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}-rds1-sg"
    register: rds1_sg_result
  - os_security_group_rule:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      direction: "ingress"
      protocol: "tcp"
      port_range_max: 22
      port_range_min: 22
      security_group: "{{ rds1_sg_result.id }}"
  - name: Aquire key
    otc_key:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "rbe-sdktest-key-000018"
    register: kms_result
    
  - name: Create CSS service
    otc_css:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}-css"
      instances: 1
      flavor_ref: "css.medium.8"
      volume_type: "COMMON"
      volume_size: 40
      vpc_id: "{{ net_admin_facts.vpc.id }}"
      subnet_id: "{{ net_admin_facts.subnets.access.id }}"
      security_group_id: "{{ rds1_sg_result.id }}"
      httpsEnable: "true"
      disk_encryption_id: "{{ kms_result.id }}"

  - name: Remove CSS service
    otc_css:
      state: "absent"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}-css"


  - os_security_group:
      state: "absent"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}-rds1-sg"
      retries: 10
      delay: 15
    register: secgroup_remove
    until: secgroup.remove 

  - name: Remove subnet access
    otc_subnet:
      state: "absent"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.subnets.access.name }}" 

  - name: Remove VPC network
    otc_vpc:
      state: "absent"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}"
