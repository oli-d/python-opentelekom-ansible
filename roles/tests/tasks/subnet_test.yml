---  
  - name: Setup VPC network
    otc_vpc:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net_admin.vpc.name }}"
      cidr: "10.19.0.0/16"
    register: vpc_result
    when: net_admin_state == 'present'
  - set_fact: 
      net_admin_facts:
        vpc: "{{ vpc_result.vpc }}"
    when: net_admin_state == 'present'

  - name: Setup subnet access
    otc_subnet:
      state: "{{ net_admin_state }}"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      name: "{{ net_admin.subnets.access.name }}" 
      vpc_id: "{{ net_admin_facts.vpc.id }}"
      cidr: "{{ net_admin.subnets.access.cidr }}"
      gateway_ip: "{{ net_admin.subnets.access.gateway_ip | default(net_admin.subnets.access.cidr|ipaddr('1')|ipaddr('address')) }}"
      dns_nameservers: "{{ net_admin.subnets.access.nameservers }}"
    register: sn_access_result
    when: net_admin_state == 'present'
  - set_fact:
      net_admin_facts: "{{ net_admin_facts | combine({ 'subnets': { 'access': sn_access_result.subnet }}, recursive=True) }}"
    when: net_admin_state == 'present'

  - name: "Worker subnet {{ net_admin.subnets.worker.name }}"
    otc_subnet:
      state: "{{ net_admin_state }}"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      name: "{{ net_admin.subnets.worker.name }}" 
      vpc_id: "{{ net_admin_facts.vpc.id }}"
      cidr: "{{ net_admin.subnets.worker.cidr }}"
      gateway_ip: "{{ net_admin.subnets.worker.gateway_ip | default(net_admin.subnets.worker.cidr|ipaddr('1')|ipaddr('address')) }}"
      dns_nameservers: "{{ net_admin.subnets.worker.nameservers }}"
    register: sn_worker_result
  - set_fact:
      net_admin_facts: "{{ net_admin_facts | combine({ 'subnets': { 'worker': sn_worker_result.subnet }}, recursive=True) }}"
    when: net_admin_state == 'present'
