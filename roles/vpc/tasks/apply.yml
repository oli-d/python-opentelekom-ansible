---  
  - name: Test create VPC network
    otc_vpc:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net.vpc.name }}"
      cidr: "10.18.0.0/16"
      enable_shared_snat: True
    register: network_result

  - name: Test update VPC network
    otc_vpc:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      validate_certs: "yes"
      name: "{{ net.vpc.name }}"
      enable_shared_snat: False
      cidr: "{{ net.vpc.cidr }}"
    register: network_result
  - set_fact:
      net_facts: "{{ net_facts | combine({ 'vpc': { 'id': network_result.id }}, recursive=True) }}"

  - name: "Access subnet {{ net.subnets.worker.name }}"
    otc_subnet:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      name: "{{ net.subnets.access.name }}" 
      vpc_id: "{{ net_facts.vpc.id }}"
      cidr: "{{ net.subnets.access.cidr }}"
      gateway_ip: "{{ net.subnets.access.gateway_ip | default(net.subnets.access.cidr|ipaddr(1)|ipaddr('address')) }}"
      dns_nameservers: "{{ net.subnets.access.nameservers }}"
    register: sn_access_result
  - set_fact:
      net_facts: "{{ net_facts | combine({ 'subnets': { 'access': sn_access_result.subnet }}, recursive=True) }}"

  - name: "Worker subnet {{ net.subnets.worker.name }}"
    otc_subnet:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      name: "{{ net.subnets.worker.name }}" 
      vpc_id: "{{ net_facts.vpc.id }}"
      cidr: "{{ net.subnets.worker.cidr }}"
      gateway_ip: "{{ net.subnets.worker.gateway_ip | default(net.subnets.worker.cidr|ipaddr(1)|ipaddr('address')) }}"
      dns_nameservers: "{{ net.subnets.access.nameservers }}"
    register: sn_access_result
  - set_fact:
      net_facts: "{{ net_facts | combine({ 'subnets': { 'worker': sn_worker_result.subnet }}, recursive=True) }}"

  - name: "Backend subnet {{ net.subnets.backend.name }}"
    otc_subnet:
      state: "present"
      auth_type: password
      auth:
        "{{ otc_os_auth }}"
      cacert: "{{ otc_cert_file }}"
      name: "{{ net.subnets.worker.name }}" 
      vpc_id: "{{ net_facts.vpc.id }}"
      cidr: "{{ net.subnets.worker.cidr }}"
      gateway_ip: "{{ net.subnets.worker.gateway_ip | default(net.subnets.worker.cidr|ipaddr(1)|ipaddr('address')) }}"
      dns_nameservers: "{{ net.subnets.worker.nameservers }}"
    register: sn_backend_result
  - set_fact:
      net_facts: "{{ net_facts | combine({ 'subnets': { 'worker': sn_backend_result.subnet }}, recursive=True) }}"
